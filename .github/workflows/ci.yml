name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install black flake8
    
    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=dbt,venv,build,dist
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --exclude=dbt,venv,build,dist
      continue-on-error: true
  
  unit-tests:
    name: Unit Tests (No Credentials)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pytest pytest-mock
        pip install pandas fuzzywuzzy python-Levenshtein phonetics
    
    - name: Run unit tests only
      run: |
        pytest tests/test_ocr_extraction.py tests/test_corrections.py tests/test_ml_categorization.py -v -m "not integration" || true
      continue-on-error: true
  
  validate-config:
    name: Validate Configuration
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Check for sensitive data
      run: |
        echo "Checking for accidentally committed credentials..."
        # Exclude check scripts and workflow files from search
        if grep -r "sk-ant-api03-[a-zA-Z0-9]" . \
           --exclude-dir=.git \
           --exclude-dir=.github \
           --exclude="*.md" \
           --exclude="check_sensitive_data.ps1" || \
           grep -r "\"private_key\":\s*\"" . \
           --exclude-dir=.git \
           --exclude-dir=.github \
           --exclude="*.md"; then
          echo "ERROR: Found potential credentials in repository"
          exit 1
        else
          echo "OK: No credentials found in source code"
        fi
    
    - name: Verify .env.example exists
      run: |
        if [ ! -f .env.example ]; then
          echo "ERROR: .env.example not found"
          exit 1
        fi
        echo "OK: .env.example exists"
    
    - name: Verify .gitignore excludes credentials
      run: |
        if ! grep -q "credentials/" .gitignore || ! grep -q "*.json" .gitignore; then
          echo "ERROR: .gitignore doesn't exclude credentials properly"
          exit 1
        fi
        echo "OK: .gitignore configured correctly"
  
  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt || echo "Some dependencies may require system packages"
      continue-on-error: true
    
    - name: Verify Python syntax
      run: |
        python -m py_compile process_pdfs_to_bigquery.py
        python -m py_compile apply_ml_categorization.py
        echo "OK: Python syntax valid"
    
    - name: Check imports
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        echo "OK: Python environment ready"
